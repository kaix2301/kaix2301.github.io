[{"title":"GitHub+PicGo配置图床","url":"/2022/01/02/GitHub-PicGo%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/","content":"点击上面的 “图床” tag，可以找到typora “自动化使用本文图床” 的配置方式\n1.Github建库和配置1-1.建库\n\n1-2.生成 token 备用，用于访问依次点击：头像—Settings—Developer settings—Personal access tokens—Generate new token\n\n\n\n\n生成后会有一段token序列号，一定！！！复制下来记录好，以后进入将看不到此序列，留着备用。\n2.PicGo 安装和配置2-1.PicGo下载安装点此PicGo下载进入下载页面，在2.3.0(目前最新版本)下找到安装包，进行安装\n\n\n2-1.PicGo配置\n\n\n自定义域名：\nhttps://cdn.jsdelivr.net/gh/用户名/库名\n\n\n\n3.使用上图左侧“上传区”里，可以直接上传，上传后自动复制链接\n上图左侧“相册”里，可以对已上传图片进行删除、复制链接等\n","categories":["图床"],"tags":["hexo","图床"]},{"title":"gitHub io 绑定域名","url":"/2022/01/02/gitHub-io-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/","content":""},{"title":"Hello World","url":"/2022/01/01/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"hexo + github 搭建博客","url":"/2022/01/01/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","content":"流程：搭建本地博客—创建远程仓库—本地远程连接—本地发布到远程\n1.前提准备1.安装 git2.安装 node.js3.注册 GitHub 账号（用户名用英文）\n前两项都是傻瓜式安装，不停下一步。由于我很早就安装好并注册过了，没办法一步一步截图，所以这里不再赘述了。网上详细的教程很多，不难。\n2.搭建本地博客2-1.创建一个文件夹在任意位置创建一个文件夹，博客相关所有内容将全部再次文件夹中，我本人是 E:\\blog\\Hexo\n2-2.安装Hexo1.进入上面的文件夹\n2.鼠标右键，点击 Git Bash Here 进入执行命令的窗口\n3.执行安装命令 npm install hexo-cli -g\n4.执行初始化命令  hexo init， 等待执行完成后，文件夹中出现一些文件，说明安装成功，例如：\n\n\n5.执行生成命令 hexo g，再执行启动服务命令 hexo s。\n6.若输出 Hexo is running at http://localhost:4000 说明启动成功\n7.在浏览器中访问 http://localhost:4000查看博客效果，当然现在比较简陋\n6.进入执行命令的窗口，点击Ctrl+C可结束服务，继续执行其他命令\n3.创建远程仓库1.登录GitHub，点击图中位置，进入仓库页面\n\n\n2.点击如图位置，新建仓库\n\n\n3.新建仓库是信息填写细节要求如图，填好后点击确定创建\n\n\n4.本地远程连接4-1.绑定 SSH KEY1.本地生成 ssh key\n回到刚刚的执行命令的窗口，执行\nssh-keygen -t rsa -C &quot;your email@example.com&quot;\n\n使用 GitHub 绑定的邮箱\n不断回车，直到输出以下内容：\n\n\n按照该路径找到该文件，记事本打开，全选复制\n2.GitHub 绑定该ssh\n依次点击：头像—Settings—SSH and GPG keys—new ssh key\n\n\n执行命令窗口，执行  ssh -T git@github.com，回车后输入yes\n若输出 Hi ***! You&#39;ve successfully......说明绑定成功\n3.配置个人信息\ngit config --global user.name &quot;Github用户名&quot;git config --global user.email &quot;Github绑定的邮箱&quot;\n\n4-2.生成token1.依次点击：头像—Settings—Developer settings—Personal access tokens—Generate new token\n\n\n\n\n2.生成后会有一段token序列号，一定！！！复制下来记录好，以后进入将看不到此序列，留着备用。\n5.本地发布到远程5-1.绑定仓库路径1.进入自己创建的仓库，复制下来仓库路径\n\n\n2.博客配置文件中进行配置\n记事本（Notepad++、Vs Code等更好）打开 E:\\blog\\Hexo\\ _config.yml（换成自己的）\n将该文件靠后位置的：\ndeploy:  type: \n\n修改为\ndeploy:  type: git  repository: https://github.com/xxx/xxx.github.io.git  branch: main\n\n注意：必须是英文冒号；冒号后面都有一个空格；repository后面是刚刚复制的仓库路径\n5-2.本地博客发布到远程1.安装 hexo-deployer-git 自动部署发布工具\n在执行命令窗口执行 \nnpm install hexo-deployer-git --save\n\n2.发布\n依次执行：\n清除缓存 hexo clean ，生成 hexo g ，发布 hexo d\n3.错误处理\n若出现以下错误，有两种可能，点此查看解决方法，很简单。\nfatal: unable to access &#x27;https://github.com/*/*.github.io.git/&#x27;: Failed to connect to github.com port 443: Timed outFATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\\blog\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:51:21)      at ChildProcess.emit (events.js:315:20)      at ChildProcess.cp.emit (E:\\blog\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12) &#123;    code: 128  &#125;&#125; Something&#x27;s wrong. \n\n4.没错误的话会弹出一个输入框，输入前面记录好的token序列确定后会成功发布\n6.检查在浏览器访问 https://用户名.github.io/，可看到远程博客效果，博客已经搭建成功。\n点击标题下 hexo 标签，可查看包括博客美化等相关文章\n","categories":["hexo","搭建"],"tags":["hexo"]},{"title":"hexo博客-主题和美化","url":"/2022/01/02/hexo%E5%8D%9A%E5%AE%A2-%E4%B8%BB%E9%A2%98%E5%92%8C%E7%BE%8E%E5%8C%96/","content":"以此博客为例，使用 keep 主题，效果可看到\n选择此主题原因：\n\n不喜欢很炫酷很花哨的风格，此主题简洁大方\n当前效果中，所有看得到的都可以直接配置，不复杂\n本站目前只用于学习记录和笔记整理，不追求推广什么的，故不开评论\n\n下载安装主题1.进入博客文件夹，右键打开 Git Bash\n2.克隆仓库\ngit clone https://github.com/XPoet/hexo-theme-keep themes/keep\n\n注：官方文档还有一种npm install的安装方式，不建议\n3.编辑 博客文件夹\\_config.yml \n在靠后位置找到 theme, 将值更改为 keep\ntheme: keep\n\n配置主题编辑 博客文件夹\\themes\\keep\\_config.yml\n可直接参考官方文档，是我见过最好的说明文档\n对每个属性的每个值进行了解释，不同值对应的不同效果都有截图说明\n评论等功能在文档中也有详细教程\n注意：配置文件中所有冒号必须是英文的，冒号后必须有一个空格\n","categories":["hexo","搭建"],"tags":["hexo"]},{"title":"hexo提交时 Error:Spawn failed 问题","url":"/2022/01/02/hexo%E6%8F%90%E4%BA%A4%E6%97%B6-Error-Spawn-failed-%E9%97%AE%E9%A2%98/","content":"执行 hexo d 后，可能出现以下问题fatal: unable to access &#x27;https://github.com/*/*.github.io.git/&#x27;: Failed to connect to github.com port 443: Timed outFATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\\blog\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:51:21)      at ChildProcess.emit (events.js:315:20)      at ChildProcess.cp.emit (E:\\blog\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12) &#123;    code: 128  &#125;&#125; Something&#x27;s wrong. \n\n解决方法一可能是网络问题导致，多尝试几次可能会恢复正常\n解决方法二Hexo\\_config.yml中找到以下内容：\ndeploy:  type: git  repository: git@github.com:kaix2301/kaix2301.github.io.git  branch: main\n\nrepository后若原来是HTTPS路径，改为SSH路径\n找该路径方式，进入GitHub中博客所在仓库\n\n","categories":["hexo","问题"],"tags":["hexo"]},{"title":"hexo提交时 nothing to commit 问题","url":"/2022/01/01/hexo%E6%8F%90%E4%BA%A4%E6%97%B6-nothing-to-commit-%E9%97%AE%E9%A2%98/","content":"问题hexo d 后新内容无法提交，提示：\nOn branch masternothing to commit, working directory clean\n\n解决解决方法是删除 “.deploy”依次执行以下指令：\nrm -rf .deployhexo cleanhexo ghexo d\n","categories":["hexo","问题"],"tags":["hexo"]},{"title":"typora自动化使用图床","url":"/2022/01/02/typora%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BA%8A/","content":"\n上文中使用Github+PicGo配置好了图床，这里在typora中使用\n\n效果直接将图片复制到typora编辑页面后，图片自动上传到图床，图片地址也自动更新为在线链接\n配置方式1.打开typora，点击：文件—偏好设置—图像\n2.进行如下配置\n\n\n3.点击“验证图片上传选项”，显示成功，配置完毕\n","categories":["图床"],"tags":["图床","typora"]},{"title":"linux-01VMware网络设置","url":"/2022/01/01/linux-01VMware%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/","content":"VMware+Linux网络设置（联网）1.VMware设置\n\n\n若没有第一个点击右下角个更改设置\n2.桥接模式特点：\na. 默认使用VMnet0，不提供DHCP服务 \nb. 虚拟机与外部主机需要在同一个网段上，与局域网的其它机器没有区别。 \nc. 可以与局域网内其它主机通信，可以与外部网络通信 \nd. 容易与局域网其他主机引起ip地址冲突\n设置：\na. 点击 编辑虚拟机设置—网络适配器—选择桥接模式\n\n\nb. 设置新模式后重启网卡使之生效，\n  systemctl restart network.service  \nc. 查看物理机和linux系统的ip地址，验证特点b\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看WLAN下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，可以通信，验证验证特点c\n3.仅主机模式特点： \na. 默认使用VMnet1，提供DHCP服务 \nb. 虚拟机可以和物理主机互相访问，但虚拟机无法访问外部网络\n设置：\na. VMware设置中点击仅主机模式可以设置子网ip范围和子网掩码，一般使用默认即可\nb. 点击 编辑虚拟机设置—网络适配器—选择仅主机模式\nc. 重启网卡\nd. 查看物理机和linux系统的ip地址\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看VMnet1下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，不可以通信\n3.NAT模式特点： \na. 默认使用VMnet8，提供DHCP服务\nb. 虚拟机可以和物理主机互相访问，可访问外部网络 \nc. 局域网内其它机器访问不了\n设置：\na. VMware设置中点击仅主机模式可以设置子网ip范围和子网掩码，一般使用默认即可\nb. 点击 编辑虚拟机设置—网络适配器—选择NAT模式\nc. 重启网卡\nd. 查看物理机和linux系统的ip地址\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看VMnet8下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，可以通信\n","categories":["linux","虚拟机"],"tags":["linux","虚拟机"]}]