[{"title":"GitHub+PicGo配置图床","url":"/2022/01/02/GitHub-PicGo%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/","content":"点击上面的 “图床” tag，可以找到typora “自动化使用本文图床” 的配置方式\n1.Github建库和配置1-1.建库\n\n1-2.生成 token 备用，用于访问依次点击：头像—Settings—Developer settings—Personal access tokens—Generate new token\n\n\n\n\n生成后会有一段token序列号，一定！！！复制下来记录好，以后进入将看不到此序列，留着备用。\n2.PicGo 安装和配置2-1.PicGo下载安装点此PicGo下载进入下载页面，在2.3.0(目前最新版本)下找到安装包，进行安装\n\n\n2-1.PicGo配置\n\n\n自定义域名：\nhttps://cdn.jsdelivr.net/gh/用户名/库名\n\n\n\n3.使用上图左侧“上传区”里，可以直接上传，上传后自动复制链接\n上图左侧“相册”里，可以对已上传图片进行删除、复制链接等\n","categories":["图床"],"tags":["hexo","图床"]},{"title":"Hello World","url":"/2022/01/01/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"hexo + github 搭建博客","url":"/2022/01/01/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","content":"流程：搭建本地博客—创建远程仓库—本地远程连接—本地发布到远程\n1.前提准备1.安装 git2.安装 node.js3.注册 GitHub 账号（用户名用英文）\n前两项都是傻瓜式安装，不停下一步。由于我很早就安装好并注册过了，没办法一步一步截图，所以这里不再赘述了。网上详细的教程很多，不难。\n2.搭建本地博客2-1.创建一个文件夹在任意位置创建一个文件夹，博客相关所有内容将全部再次文件夹中，我本人是 E:\\blog\\Hexo\n2-2.安装Hexo1.进入上面的文件夹\n2.鼠标右键，点击 Git Bash Here 进入执行命令的窗口\n3.执行安装命令 npm install hexo-cli -g\n4.执行初始化命令  hexo init， 等待执行完成后，文件夹中出现一些文件，说明安装成功，例如：\n\n\n5.执行生成命令 hexo g，再执行启动服务命令 hexo s。\n6.若输出 Hexo is running at http://localhost:4000 说明启动成功\n7.在浏览器中访问 http://localhost:4000查看博客效果，当然现在比较简陋\n6.进入执行命令的窗口，点击Ctrl+C可结束服务，继续执行其他命令\n3.创建远程仓库1.登录GitHub，点击图中位置，进入仓库页面\n\n\n2.点击如图位置，新建仓库\n\n\n3.新建仓库是信息填写细节要求如图，填好后点击确定创建\n\n\n4.本地远程连接4-1.绑定 SSH KEY1.本地生成 ssh key\n回到刚刚的执行命令的窗口，执行\nssh-keygen -t rsa -C &quot;your email@example.com&quot;\n\n使用 GitHub 绑定的邮箱\n不断回车，直到输出以下内容：\n\n\n按照该路径找到该文件，记事本打开，全选复制\n2.GitHub 绑定该ssh\n依次点击：头像—Settings—SSH and GPG keys—new ssh key\n\n\n执行命令窗口，执行  ssh -T git@github.com，回车后输入yes\n若输出 Hi ***! You&#39;ve successfully......说明绑定成功\n3.配置个人信息\ngit config --global user.name &quot;Github用户名&quot;git config --global user.email &quot;Github绑定的邮箱&quot;\n\n4-2.生成token1.依次点击：头像—Settings—Developer settings—Personal access tokens—Generate new token\n\n\n\n\n2.生成后会有一段token序列号，一定！！！复制下来记录好，以后进入将看不到此序列，留着备用。\n5.本地发布到远程5-1.绑定仓库路径1.进入自己创建的仓库，复制下来仓库路径\n\n\n2.博客配置文件中进行配置\n记事本（Notepad++、Vs Code等更好）打开 E:\\blog\\Hexo\\ _config.yml（换成自己的）\n将该文件靠后位置的：\ndeploy:  type: \n\n修改为\ndeploy:  type: git  repository: https://github.com/xxx/xxx.github.io.git  branch: main\n\n注意：必须是英文冒号；冒号后面都有一个空格；repository后面是刚刚复制的仓库路径\n5-2.本地博客发布到远程1.安装 hexo-deployer-git 自动部署发布工具\n在执行命令窗口执行 \nnpm install hexo-deployer-git --save\n\n2.发布\n依次执行：\n清除缓存 hexo clean ，生成 hexo g ，发布 hexo d\n3.错误处理\n若出现以下错误，有两种可能，点此查看解决方法，很简单。\nfatal: unable to access &#x27;https://github.com/*/*.github.io.git/&#x27;: Failed to connect to github.com port 443: Timed outFATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\\blog\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:51:21)      at ChildProcess.emit (events.js:315:20)      at ChildProcess.cp.emit (E:\\blog\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12) &#123;    code: 128  &#125;&#125; Something&#x27;s wrong. \n\n4.没错误的话会弹出一个输入框，输入前面记录好的token序列确定后会成功发布\n6.检查在浏览器访问 https://用户名.github.io/，可看到远程博客效果，博客已经搭建成功。\n点击标题下 hexo 标签，可查看包括博客美化等相关文章\n","categories":["hexo","搭建"],"tags":["hexo"]},{"title":"hexo+github强制使用https","url":"/2022/01/04/hexo-github%E5%BC%BA%E5%88%B6%E4%BD%BF%E7%94%A8https/","content":"问题如果绑定了自己的域名，访问者默认通过http方式访问\n\n搜索引擎更喜欢收录https的网站，不喜欢http\nhttps更安全，而且使用http访问时网址前会显示本站不安全\n使用不蒜子统计访问量时，同一用户多次刷新时，访问人数和总访问量都增加。使用https后，上述情况访问人数不再错误增加，访问量继续增加\n\n配置进入github.io仓库，点击settings，再点击左侧pages\n\n","categories":["hexo","搭建"],"tags":["hexo"]},{"title":"hexo博客-主题和美化","url":"/2022/01/02/hexo%E5%8D%9A%E5%AE%A2-%E4%B8%BB%E9%A2%98%E5%92%8C%E7%BE%8E%E5%8C%96/","content":"以此博客为例，使用 keep 主题，效果可看到\n选择此主题原因：\n\n不喜欢很炫酷很花哨的风格，此主题简洁大方\n当前效果中，所有看得到的都可以直接配置，不复杂\n本站目前只用于学习记录和笔记整理，不追求推广什么的，故不开评论\n\n下载安装主题1.进入博客文件夹，右键打开 Git Bash\n2.克隆仓库\ngit clone https://github.com/XPoet/hexo-theme-keep themes/keep\n\n注：官方文档还有一种npm install的安装方式，不建议\n3.编辑 博客文件夹\\_config.yml \n在靠后位置找到 theme, 将值更改为 keep\ntheme: keep\n\n配置主题编辑 博客文件夹\\themes\\keep\\_config.yml\n可直接参考官方文档，是我见过最好的说明文档\n对每个属性的每个值进行了解释，不同值对应的不同效果都有截图说明\n评论等功能在文档中也有详细教程\n注意：配置文件中所有冒号必须是英文的，冒号后必须有一个空格\n","categories":["hexo","搭建"],"tags":["hexo"]},{"title":"hexo提交时 nothing to commit 问题","url":"/2022/01/01/hexo%E6%8F%90%E4%BA%A4%E6%97%B6-nothing-to-commit-%E9%97%AE%E9%A2%98/","content":"问题hexo d 后新内容无法提交，提示：\nOn branch masternothing to commit, working directory clean\n\n解决解决方法是删除 “.deploy”依次执行以下指令：\nrm -rf .deployhexo cleanhexo ghexo d\n","categories":["hexo","问题"],"tags":["hexo"]},{"title":"hexo提交时 Error:Spawn failed 问题","url":"/2022/01/02/hexo%E6%8F%90%E4%BA%A4%E6%97%B6-Error-Spawn-failed-%E9%97%AE%E9%A2%98/","content":"执行 hexo d 后，可能出现以下问题fatal: unable to access &#x27;https://github.com/*/*.github.io.git/&#x27;: Failed to connect to github.com port 443: Timed outFATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (E:\\blog\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:51:21)      at ChildProcess.emit (events.js:315:20)      at ChildProcess.cp.emit (E:\\blog\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12) &#123;    code: 128  &#125;&#125; Something&#x27;s wrong. \n\n解决方法一可能是网络问题导致，多尝试几次可能会恢复正常\n解决方法二Hexo\\_config.yml中找到以下内容：\ndeploy:  type: git  repository: git@github.com:kaix2301/kaix2301.github.io.git  branch: main\n\nrepository后若原来是HTTPS路径，改为SSH路径\n找该路径方式，进入GitHub中博客所在仓库\n\n","categories":["hexo","问题"],"tags":["hexo"]},{"title":"linux-01VMware网络设置","url":"/2022/01/01/linux-01VMware%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/","content":"VMware+Linux网络设置（联网）1.VMware设置\n\n\n若没有第一个点击右下角个更改设置\n2.桥接模式特点：\na. 默认使用VMnet0，不提供DHCP服务 \nb. 虚拟机与外部主机需要在同一个网段上，与局域网的其它机器没有区别。 \nc. 可以与局域网内其它主机通信，可以与外部网络通信 \nd. 容易与局域网其他主机引起ip地址冲突\n设置：\na. 点击 编辑虚拟机设置—网络适配器—选择桥接模式\n\n\nb. 设置新模式后重启网卡使之生效，\n  systemctl restart network.service  \nc. 查看物理机和linux系统的ip地址，验证特点b\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看WLAN下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，可以通信，验证验证特点c\n3.仅主机模式特点： \na. 默认使用VMnet1，提供DHCP服务 \nb. 虚拟机可以和物理主机互相访问，但虚拟机无法访问外部网络\n设置：\na. VMware设置中点击仅主机模式可以设置子网ip范围和子网掩码，一般使用默认即可\nb. 点击 编辑虚拟机设置—网络适配器—选择仅主机模式\nc. 重启网卡\nd. 查看物理机和linux系统的ip地址\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看VMnet1下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，不可以通信\n3.NAT模式特点： \na. 默认使用VMnet8，提供DHCP服务\nb. 虚拟机可以和物理主机互相访问，可访问外部网络 \nc. 局域网内其它机器访问不了\n设置：\na. VMware设置中点击仅主机模式可以设置子网ip范围和子网掩码，一般使用默认即可\nb. 点击 编辑虚拟机设置—网络适配器—选择NAT模式\nc. 重启网卡\nd. 查看物理机和linux系统的ip地址\n  centos查看ip：ip addr \n  win10查看ip：执行ipconfig  查看VMnet8下ipv4地址\nd. 在物理机和虚拟机中的centos中，分别ping前面查到的ip，可以通信\n  在centos中ping “www.baidu.com” ，可以通信\n","categories":["linux","虚拟机"],"tags":["linux","虚拟机"]},{"title":"typora自动化使用图床","url":"/2022/01/02/typora%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BA%8A/","content":"\n上文中使用Github+PicGo配置好了图床，这里在typora中使用\n\n效果直接将图片复制到typora编辑页面后，图片自动上传到图床，图片地址也自动更新为在线链接\n配置方式1.打开typora，点击：文件—偏好设置—图像\n2.进行如下配置\n\n\n3.点击“验证图片上传选项”，显示成功，配置完毕\n","categories":["图床"],"tags":["图床","typora"]},{"title":"计算机网络-02标准化","url":"/2022/01/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-02%E6%A0%87%E5%87%86%E5%8C%96/","content":"1.标准化意义不同厂商的软硬件之间的相互连通\n2.标准分类法定标准：权威机构指定，如OSI\n事实标准：竞争中确立，如TCP/IP\n3.因特网标准形式RFC—Request for Comment\n因特网标准 =&gt;RFC （充要关系）\n4.因特网标准制定流程\n\n\n阶段\n简介\n\n\n\n因特网草案\n不是RFC\n\n\n建议标准\n成为RFC\n\n\n草案标准\n建议标准经过评论和修改\n\n\n因特网标准\n草案标准经过权威机构审核\n\n\n草案标准现已取消\n5.重要组织国际标准化组织ISO制定过：OSI模型，HDLC协议等\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]},{"title":"计算机网络-03性能指标","url":"/2022/01/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-03%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/","content":"0.导图\n\n1.数据率比特：位（0011010—7bit数据）\n数据率：单位时间内，数字信道上，传送数据位数，的速率\n单位：b/s, kb/s, Mb/s, Gb/s, Tb/s\n注意：速率单位：相邻单位间，1000倍存储容量：相邻单位间，2^10倍1Mb/s = 1000kb/s，1MB = 2^10KB\n2.带宽原指：某信号最高最低频率之差\n计网中指：某一点到另一点所能通过的“最高数据率”通俗讲：网络设备支持的最高极限速度注意：指向链路发送数据的数据率，与链路中传播速率无关\n单位：b/s, kb/s, Mb/s, Gb/s, Tb/s\n3.吞吐量表示在单位时间内通过某个网络（或信道、接口）的数据量。\n带宽指理论上最高数据率，吞吐量就指事实数据率。\n单位：b/s, kb/s, Mb/s, Gb/s, Tb/s\n4.时延\n\n\n时延\n简介\n\n\n\n发送(传输)时延\n开始发送到全部发送到链路的时间\n\n\n传播时延\n取决于链路长度和电磁波传播速度\n\n\n排队时延\n等待输入输出链路可以使用的时间\n\n\n处理时延\n检查错误，找出口\n\n\n发送时延 = 数据长度 / 信道带宽(发送速率)\n传播时延 = 信道长度 / 电磁波信道传播速率\n单位：s\n5.时延带宽积时延带宽积 = 传播时延 * 带宽 \n含义：容量；以bit为单位的链路长度；链路上有多少bit。\n单位：bit\n6.往返时间RTT从发送方发送第一个bit数据开始，到发送方收到来自接收方的第一个bit的确认信息为止，经历的总时间。\nRTT = 往返传播时延 + 末端处理时间\n其中主要是往返传播时延（传播时延*2）\n7.利用率信道利用率 = 有数据通过的时间 / 总时间\n网络利用率 = 信道利用率的加权平均值\n利用率与时延关系，参考马路上车辆数量的影响\n\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]},{"title":"计算机网络-01概念和功能","url":"/2022/01/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-01%E6%A6%82%E5%BF%B5%E5%92%8C%E5%8A%9F%E8%83%BD/","content":"1.概念计算机网络是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。特点是互连和自治。\n\n\n\n核心问题\n回答\n\n\n\n是什么\n计算机系统\n\n\n怎么连接\n通信设备与线路\n\n\n怎么实现\n软件\n\n\n目标\n资源共享，信息传递\n\n\n特点\n互连和自治（无主从关系）\n\n\n2.功能\n\n\n常见功能\n简介\n\n\n\n* 数据通信\n最基本，最重要\n\n\n* 资源共享\n共享硬件、软件、数据\n\n\n分布式处理\n同一任务分给多计算机\n\n\n提高可靠性\n基于分布式，一台坏了其他替代\n\n\n负载均衡\n基于分布式，多台之间的平衡\n\n\n3.分类按分布范围\n广域网(WAN)：交换技术\n城域网(MAN)：以太网技术\n局域网(LAN)：广播技术\n个人区域网(PAN)\n\n按拓扑结构\n总线：简单；效率低；任意点故障敏感\n星：中心一般是路由器或交换机；成本高；中心故障敏感\n环：令牌环局域网；环中单向传输\n网：可靠性高；成本高；控制复杂\n\n按交换技术\n电路交换\n报文交换\n分组交换\n\n4.组成按组成部分：硬件 + 软件 + 协议(核心)\n按工作方式：边缘(主机) + 核心(网络和路由器)\n按功能组成：通信子网 + 资源子网\n5.发展5-1.发展阶段\n\n\n发展阶段\n简介\n\n\n\nARPAnet 阿帕网\n只可连接同类型网络\n\n\ninternet 互联网\n不同网络的互连\n\n\nInternet 因特网\n最大的互联网（TCP/IP）\n\n\n5-2.三级结构（第二阶段）\n\n5-3.多层次ISP结构（第三阶段）\nISP：因特网服务商，如移动联通等\nIXP：因特网交换点，允许两个网络直接相连并交换分组，更加有效地利用网络资源，部分国家和地区也称之为NAP（网络接入点）。\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]},{"title":"计算机网络-04分层结构","url":"/2022/01/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-04%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84/","content":"分层原因各层实现各自的功能，更有条理，更容易解决网络传输中各种问题。\n分层原则1.各层之间相互独立，每层实现一种相对独立的功能。2.每层之间界限自然清晰，相互交流尽可能少。3.结构上可分割开，每层都采用最合适的技术来实现。4.保持下层对上层的独立，上层单向使用下层提供的服务。5.整个分层结构能促进标准化工作。\n基本概念1.实体第n层中的活动元素称为n层实体。同一层的实体叫对等实体。\n2.协议为进行网络中的对等实体数据交换而建立的规则、标准或约定【水平】\n\n\n\n内容\n简介\n\n\n\n语法\n规定传输数据的格式\n\n\n语义\n规定所要完成的功能\n\n\n同步\n规定各种操作的顺序\n\n\n3.接口访问服务点SAP上层使用下层服务的入口\n4.服务下层为相邻上层提供的功能调用【垂直】\n5.数据组成\n\n\n\n\n\n\n\n\nSDU服务数据单元\n为完成用户所要求的功能而应传送的数据\n\n\nPCI协议控制信息\n控制协议操作的信息\n\n\nPDU协议数据单元\n对等层次之间传送的数据单位\n\n\nPDU = PCI + SDU本层PDU = 下层SDU\n总结\n网络体系结构是从功能上描述计算机网络结构。\n网络体系结构是分层结构。\n每层遵循某个/些网络协议以完成本层功能。\n计算机网络体系结构是计算机网络的各层及其协议的集合。\n向上层提供服务时，此服务不仅包含本层本身的功能，还包含由下层服务提供的功能。\n仅在相邻层间有接口，且所提供服务的实现细节对上一层完全屏蔽。\n体系结构是抽象的，而实现是指能运行的一些软件和硬件。\n\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]},{"title":"计算机网络-05OSI参考模型","url":"/2022/01/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-05OSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/","content":"OSI模型\n通信过程\n\n上四层：端到端，逻辑上起点终点直接相连\n下三层：点到点，传输过程中每个经过的点都关注\n发送过程中不停打包，接收过程中不停拆包：\n\n\n各层介绍1.应用层能和用户交互且能产生网络流量（可以联网）的程序。\n常用服务以及协议：\n\n文件传输—FTP\n电子邮件—SMTP\n万维网—HTTP\n\n2.表示层用于处理在两个通信系统中交换信息的表示方式（语法和语义)\n主要功能：\n\n数据格式变换（翻译为看得懂的形式）\n数据加密和解密\n数据压缩和恢复\n\n3.会话层会话 / 建立同步(SYN)：向表示层实体/用户进程提供建立连接并在连接上有序地传输数据。\n主要功能：\n\n建立、管理、终止会话\n校验点，会话再通信失效时从校验点恢复通信\n\n4.传输层负责主机中两个进程的通信，即端到端的通信。\n传输单位：报文段或用户数据报。\n主要功能：\n\n可靠传输（收到确认信息再发）\n不可靠传输（无确认机制）\n差错控制\n流量控制（发送接收速度控制）\n复用分用（把一段数据拆开分别交给正确的进程）\n\n主要协议：TCP，UDP\n5.网络层把分组从源端传到目的端，提供通信服务。\n传输单位：数据报。(数据报长时，切割为分组)\n主要功能：\n\n路由选择\n流量控制\n差错控制\n拥塞控制\n\n拥塞控制是针对全体结点，流量控制正对发送端接收端。\n主要协议：IP、IPX、ICMP、IGMP、ARP、RARP、OSPF\n6.数据链路层是把网络层传下来的数据报组装成帧。\n传输单位：帧。\n主要功能：\n\n成帧—定义帧的开始和结束\n差错控制—帧错+位错\n流量控制\n访问（接入）控制—控制对信道的访问，比如广播式信道需独占\n\n主要协议：SDLC、HDLC、PPP、STP\n7.物理层在物理媒体上实现比特流的透明传输。\n传输单位是比特。\n透明传输：无论数据是何比特组合,都应能在链路上传送。\n主要功能：\n\n定义接口特性—引脚等\n定义传输模式—单工、半双工、双工\n定义传输速率\n比特同步\n比特编码—差分曼切斯特编码等\n\n主要协议：Rj45、802.3\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]},{"title":"计算机网络-06OSI_TCP/IP_5层模型","url":"/2022/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-06OSI-TCP-IP-5%E5%B1%82%E6%A8%A1%E5%9E%8B/","content":"OSI VS TCP/IP1.关系\n2.同分层；基于独立协议栈的概念；实现异构网络互联。\n3.异\nOSI定义了服务、协议、接口\nOSI模型先于协议，不偏向任何协议；TCP/IP模型由协议总结而出，偏向IP协议。\n\n\n\n\n\nISO/OSI\nTCP/IP\n\n\n\n传输层\n面向连接\n无连接+面向连接\n\n\n网络层\n无连接+面向连接\n无连接\n\n\n5层参考模型综合OSI和TCP/IP的优点，一般用于学习，现实中不用。\n\n\n\n\n功能\n协议\n\n\n\n应用\n支持各种网络应用\nFTP、SMTP、HTTP等\n\n\n传输\n进程间数据传输\nTCP、UDP等\n\n\n网络\n数据分组的路由和转发\nIP、ICMP、OSPF等\n\n\n数据链据\n数据报成帧\nPPP、Ethernet等\n\n\n物理\n比特传输\n\n\n\n包装和拆包过程：\n\n","categories":["计算机网络","体系结构"],"tags":["计算机网络"]}]